{
  "basePath": "/",
  "paths": {
    "/blockchain/easy/0.1.0/chains/id": {"post": {
      "summary": "Pre determine the Id of a chain request without anchoring it in the blockchain",
      "produces": ["application/json;charset=UTF-8"],
      "operationId": "determineChainId",
      "responses": {
        "200": {
          "schema": {"$ref": "#/definitions/IdResponse"},
          "description": "Chain request received and hash calculated"
        },
        "400": {
          "schema": {"$ref": "#/definitions/VndErrors"},
          "description": "Invalid blockchain request"
        }
      },
      "parameters": [{
        "schema": {"$ref": "#/definitions/Chain"},
        "in": "body",
        "name": "chain",
        "description": "Determine a chain hash. The entry needs at least a (combination of) globaly unique external Id in the complete Blockchain network!",
        "required": true
      }],
      "tags": [
        "Chain",
        "Id",
        "All"
      ],
      "consumes": ["application/json;charset=UTF-8"]
    }},
    "/blockchain/easy/0.1.0/chains/{chainId}/entries/id": {"post": {
      "summary": "Pre determine the Id of an entry request without anchoring the entry",
      "produces": ["application/json;charset=UTF-8"],
      "operationId": "determineEntryId",
      "responses": {
        "200": {
          "schema": {"$ref": "#/definitions/IdResponse"},
          "description": "EntryData request received and hash calculated"
        },
        "400": {
          "schema": {"$ref": "#/definitions/VndErrors"},
          "description": "Invalid entry request"
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "chainId",
          "description": "chainId",
          "type": "string",
          "required": true
        },
        {
          "schema": {"$ref": "#/definitions/Entry"},
          "in": "body",
          "name": "entry",
          "description": "The entry to determine the hash for on the specified chain",
          "required": true
        }
      ],
      "tags": [
        "EntryData",
        "Id",
        "All"
      ],
      "consumes": ["application/json;charset=UTF-8"]
    }},
    "/blockchain/easy/0.1.0/chains/{chainId}/entries/entry": {"post": {
      "summary": "Get an existing entry in the provided chain",
      "produces": ["application/json;charset=UTF-8"],
      "operationId": "entryByRequest",
      "responses": {
        "200": {
          "schema": {"$ref": "#/definitions/AnchoredEntryResponse"},
          "description": "The existing request entry"
        },
        "400": {
          "schema": {"$ref": "#/definitions/VndErrors"},
          "description": "Invalid chain id"
        },
        "404": {
          "schema": {"$ref": "#/definitions/AnchoredEntryResponse"},
          "description": "Request entry does not exists"
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "chainId",
          "description": "chainId",
          "type": "string",
          "required": true
        },
        {
          "schema": {"$ref": "#/definitions/Entry"},
          "in": "body",
          "name": "entry",
          "description": "Retrieve the entry",
          "required": true
        }
      ],
      "tags": [
        "EntryData",
        "All"
      ],
      "consumes": ["application/json"]
    }},
    "/blockchain/easy/0.1.0/chains/{chainId}/entries/{entryId}": {"get": {
      "summary": "Get an existing entry in the provided chain",
      "produces": ["application/json;charset=UTF-8"],
      "operationId": "entryById",
      "responses": {
        "200": {
          "schema": {"$ref": "#/definitions/AnchoredEntryResponse"},
          "description": "The existing request entry"
        },
        "400": {
          "schema": {"$ref": "#/definitions/VndErrors"},
          "description": "Invalid chain id"
        },
        "404": {
          "schema": {"$ref": "#/definitions/VndErrors"},
          "description": "Request entry does not exists"
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "chainId",
          "description": "chainId",
          "type": "string",
          "required": true
        },
        {
          "in": "path",
          "name": "entryId",
          "description": "entryId",
          "type": "string",
          "required": true
        }
      ],
      "tags": [
        "EntryData",
        "All"
      ],
      "consumes": ["application/json"]
    }},
    "/blockchain/easy/0.1.0/chains": {"post": {
      "summary": "Create a new chain",
      "produces": ["application/json;charset=UTF-8"],
      "operationId": "createChain",
      "responses": {
        "200": {
          "schema": {"$ref": "#/definitions/CommittedChainResponse"},
          "description": "Chain already exists"
        },
        "400": {
          "schema": {"$ref": "#/definitions/VndErrors"},
          "description": "Invalid blockchain request"
        },
        "202": {
          "schema": {"$ref": "#/definitions/CommittedChainResponse"},
          "description": "Chain creation request received"
        }
      },
      "parameters": [{
        "schema": {"$ref": "#/definitions/Chain"},
        "in": "body",
        "name": "chain",
        "description": "Create a chain using the first entry supplied. The entry needs at least a (combination of) globaly unique external Id in the complete Blockchain network!",
        "required": true
      }],
      "tags": [
        "Chain",
        "All"
      ],
      "consumes": ["application/json;charset=UTF-8"]
    }},
    "/blockchain/easy/0.1.0/chains/{chainId}/entries": {"post": {
      "summary": "Create a new entry in the provided chain",
      "produces": ["application/json;charset=UTF-8"],
      "operationId": "createEntry",
      "responses": {
        "200": {
          "schema": {"$ref": "#/definitions/CommittedEntryResponse"},
          "description": "OK"
        },
        "400": {
          "schema": {"$ref": "#/definitions/VndErrors"},
          "description": "Invalid entry request"
        },
        "202": {
          "schema": {"$ref": "#/definitions/CommittedEntryResponse"},
          "description": "EntryData already exists"
        },
        "204": {
          "schema": {"$ref": "#/definitions/CommittedEntryResponse"},
          "description": "EntryData creation request received"
        },
        "404": {
          "schema": {"$ref": "#/definitions/VndErrors"},
          "description": "Chain does not exist (yet)"
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "chainId",
          "description": "chainId",
          "type": "string",
          "required": true
        },
        {
          "schema": {"$ref": "#/definitions/Entry"},
          "in": "body",
          "name": "entry",
          "description": "Create a new entry for the specified chain",
          "required": true
        }
      ],
      "tags": [
        "EntryData",
        "All"
      ],
      "consumes": ["application/json;charset=UTF-8"]
    }}
  },
  "host": "gw.api.cloud.sphereon.com",
  "schemes": ["https"],
  "securityDefinitions": {"oauth2schema": {
    "tokenUrl": "https://gw.api.cloud.sphereon.com/token",
    "scopes": {"global": "accessEverything"},
    "type": "oauth2",
    "flow": "application"
  }},
  "definitions": {
    "CommittedChain": {
      "description": "Commited Chain",
      "type": "object",
      "required": [
        "blockchainImplementation",
        "dataStructure"
      ],
      "properties": {
        "chain": {"$ref": "#/definitions/Chain"},
        "dataStructure": {
          "readOnly": true,
          "type": "string",
          "enum": ["Factom"]
        },
        "id": {
          "description": "Chain ID",
          "readOnly": true,
          "type": "string"
        },
        "blockchainImplementation": {
          "readOnly": true,
          "type": "string",
          "enum": ["Bitcoin"]
        }
      }
    },
    "Chain": {
      "description": "Chain",
      "type": "object",
      "required": ["firstEntry"],
      "properties": {"firstEntry": {"$ref": "#/definitions/Entry"}}
    },
    "IdResponse": {
      "description": "Id response",
      "type": "object",
      "properties": {
        "Id": {
          "description": "The Id",
          "type": "string"
        },
        "dataStructure": {
          "readOnly": true,
          "type": "string",
          "enum": ["Factom"]
        },
        "blockchainImplementation": {
          "readOnly": true,
          "type": "string",
          "enum": ["Bitcoin"]
        }
      }
    },
    "AnchoredEntryResponse": {
      "description": "Anchored Entry response",
      "type": "object",
      "required": [
        "anchorState",
        "anchoredEntry"
      ],
      "properties": {
        "anchoredEntry": {"$ref": "#/definitions/CommittedEntry"},
        "anchorTimes": {
          "description": "The times at which the anchoredEntry was anchored in the blockchain in ISO 8601 format",
          "readOnly": true,
          "type": "array",
          "items": {
            "format": "date-time",
            "type": "string"
          }
        },
        "anchorState": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "REQUESTED",
            "COMMITTED",
            "NOT_FOUND"
          ]
        }
      }
    },
    "EntryData": {
      "description": "Entry Data",
      "type": "object",
      "required": ["content"],
      "properties": {
        "externalIds": {
          "description": "External IDs",
          "type": "array",
          "items": {"$ref": "#/definitions/ExternalId"}
        },
        "content": {
          "format": "byte",
          "description": "Content",
          "type": "string"
        }
      }
    },
    "VndError": {
      "type": "object",
      "properties": {
        "logref": {"type": "string"},
        "link": {
          "additionalProperties": {"$ref": "#/definitions/Link"},
          "type": "object"
        },
        "message": {"type": "string"}
      }
    },
    "ExternalId": {
      "description": "External ID - metadata field",
      "type": "object",
      "properties": {"value": {
        "format": "byte",
        "description": "Metadata value",
        "type": "string"
      }}
    },
    "CommittedChainResponse": {
      "description": "Committed Chain response",
      "type": "object",
      "required": ["chain"],
      "properties": {
        "chain": {"$ref": "#/definitions/CommittedChain"},
        "commitTime": {
          "format": "date-time",
          "description": "The time at which the chain was first committed in ISO 8601 format",
          "readOnly": true,
          "type": "string"
        },
        "creationRequestTime": {
          "format": "date-time",
          "description": "The time at which the chain creation was first requested in ISO 8601 format",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "Entry": {
      "description": "Entry",
      "type": "object",
      "required": ["entryData"],
      "properties": {
        "entryData": {"$ref": "#/definitions/EntryData"},
        "dataStructure": {
          "type": "string",
          "enum": ["Factom"]
        },
        "blockchainImplementation": {
          "type": "string",
          "enum": ["Bitcoin"]
        }
      }
    },
    "CommittedEntryResponse": {
      "description": "Committed EntryData response",
      "type": "object",
      "required": ["entry"],
      "properties": {
        "entry": {"$ref": "#/definitions/CommittedEntry"},
        "commitTime": {
          "format": "date-time",
          "description": "The time at which the entry creation was first requested in ISO 8601 format",
          "readOnly": true,
          "type": "string"
        },
        "creationRequestTime": {
          "format": "date-time",
          "description": "The time at which the entry creation was first requested in ISO 8601 format",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "CommittedEntry": {
      "description": "Commited Entry",
      "type": "object",
      "required": [
        "blockchainImplementation",
        "dataStructure"
      ],
      "properties": {
        "entry": {"$ref": "#/definitions/Entry"},
        "chainId": {
          "description": "Chain ID",
          "readOnly": true,
          "type": "string"
        },
        "dataStructure": {
          "readOnly": true,
          "type": "string",
          "enum": ["Factom"]
        },
        "blockchainImplementation": {
          "readOnly": true,
          "type": "string",
          "enum": ["Bitcoin"]
        },
        "entryId": {
          "description": "Entry ID",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "Link": {
      "type": "object",
      "properties": {"href": {"type": "string"}}
    },
    "VndErrors": {
      "type": "object",
      "properties": {"error": {
        "type": "array",
        "items": {"$ref": "#/definitions/VndError"}
      }}
    }
  },
  "swagger": "2.0",
  "info": {
    "license": {
      "name": "Apache License Version 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    },
    "contact": {
      "name": "Sphereon DevOps Team",
      "url": "https://sphereon.com",
      "email": "dev@sphereon.com"
    },
    "description": "<b>The Easy Blockchain API is an easy to use API to store entries within chains. Currently it stores entries using the bitcoin blockchain by means of Factom. In the future other solutions will be made available<\/b>\r\n\r\nThe flow is generally as follows:\r\n1. Make sure a chain has been created using the /chain POST endpoint. Normaly you only need one or a handfull of chains. This is an expensive operation.\r\n2. Store entries on the chain from step 1. The entries will contain the content and metadata you want to store forever on the specified chain.\r\n3. Retrieve an existing entry from the chain to verify or retrieve data\r\n\r\n\r\n<b>Interactive testing: <\/b>A web based test console is available in the <a href=\"https://store.sphereon.com\">Sphereon API Store<\/a>",
    "termsOfService": "https://sphereon.com",
    "title": "Easy Blockchain API",
    "version": "0.1.0"
  },
  "tags": [
    {
      "name": "EntryData",
      "description": "EntryData related APIs"
    },
    {
      "name": "Id",
      "description": "Id determination APIs"
    },
    {
      "name": "Chain",
      "description": "Chain related APIs"
    },
    {
      "name": "All",
      "description": "All Blockchain APIs"
    }
  ]
}